wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`) %>%
select(temp, wind_vel, wind_dir, ultra_vi)
prediction <- predict(rf_mod, pred_data)
# Generamos el dataset para la predicción
pred_data <- meteo_data_18 %>% rename(global_radiation = `Global Radiation [W/m2]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`) %>%
select(global_radiation, temp, wind_vel, wind_dir, ultra_vi)
prediction <- predict(rf_mod, pred_data)
predictions <- prediction$predictions
predictions <- prediction$predictions %>% as.data.frame()
View(predictions)
Datetime <- meteo_data_18 %>% select(Datetime)
predictions <- prediction$predictions %>% as.data.frame() %>% rename(`B_Optimal - Power DC [W]` = power)
predictions <- prediction$predictions %>%
as.data.frame() %>%
rename("B_Optimal - Power DC [W]" = .)
predictions <- prediction$predictions %>%
as.data.frame()
predictions <- predictions %>% rename("B_Optimal - Power DC [W]" = .)
predictions <- prediction$predictions %>%
as.data.frame()
View(predictions)
colnames(predictions) <- "B_Optimal - Power DC [W]"
View(predictions)
Datetime <- meteo_data_18 %>% select(Datetime)
submission_01 <- bind_cols(Datetime, predictions)
View(submission_01)
View(meteo_data_18)
Datetime <- meteo_data_18 %>% select(Datetime) %>% arrange(Datetime)
View(Datetime)
# Generamos el dataset para la predicción
pred_data <- meteo_data_18 %>% rename(global_radiation = `Global Radiation [W/m2]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`) %>%
arrange(Datetime) %>%
select(global_radiation, temp, wind_vel, wind_dir, ultra_vi)
prediction <- predict(rf_mod, pred_data)
predictions <- prediction$predictions %>%
as.data.frame()
colnames(predictions) <- "B_Optimal - Power DC [W]"
Datetime <- meteo_data_18 %>% select(Datetime) %>% arrange(Datetime)
submission_01 <- bind_cols(Datetime, predictions)
View(submission_01)
write_csv(submission_01, "submission_01.csv")
View(submission_01)
# Carga de librerías
library(tidyverse)
library(data.table)
library(lubridate)
library(knitr)
# Librerías para el modelado
library(caret)
library(ranger)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime,
`Global Radiation [W/m2]`,
`Ambient Temperature [ÂºC]`,
`Ultraviolet [W/m2]`,
`Wind Velocity [m/s]`,
`Wind Direction [Âº]`)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
data <- data %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`)
set.seed <- 42
sample_data <- sample_n(data, 10000)
ggplot(data = sample_data, aes(x = global_radiation,  y = power)) +
geom_point()
data <- data %>% select(-Datetime)
set.seed(42)
trainIndex <- createDataPartition(data$power, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-power)
y_validation_data <- validation_data %>% select(power)
# We create a base model with all the variables
# Random Forest Model
#
#rf_mod <- ranger(power ~ .,
#              data = train_data,
#               num.trees = 100,
#               splitrule = "variance",
#               min.node.size = 5,
#                seed = 42)
#
rf_mod <- ranger(power ~ .,
data = train_data,
num.trees = 100,
splitrule = "variance",
min.node.size = 25,
seed = 42)
prediction <- predict(rf_mod, X_validation_data)
y_validation_data <- c(y_validation_data$power)
prediction <- c(prediction$predictions)
MAE <- MAE(y_validation_data, prediction)
MAE
r_squared <- R2(prediction,y_validation_data)
r_squared
saveRDS(rf_mod, "base_model_rf_3.rds")
include_graphics("imgs/2019-11-14_EDP_Sun_Power_Competition_Ranking.png")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
include_graphics("imgs/2019-11-14_EDP_Sun_Power_Competition_Ranking.png")
ranking <- read_csv("data/ranking_partipants.csv")
ranking <- ranking %>% mutate(R2 = Score/20)
View(ranking)
ranking <- read_delim("data/ranking_partipants.csv", delim = ";")
ranking <- ranking %>% mutate(R2 = Score/20)
ranking
library(knitr)
library(tidyverse)
library(kableExtra)
include_graphics("imgs/2019-11-14_EDP_Sun_Power_Competition_Ranking.png")
ranking <- read_delim("data/ranking_partipants.csv", delim = ";")
ranking <- ranking %>% mutate(R2 = Score/20)
ranking %>% kable_styling()
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(kableExtra)
include_graphics("imgs/2019-11-14_EDP_Sun_Power_Competition_Ranking.png")
ranking <- read_delim("data/ranking_partipants.csv", delim = ";")
ranking <- ranking %>% mutate(R2 = Score/20)
ranking %>% kable_styling()
ranking <- read_delim("data/ranking_partipants.csv", delim = ";")
ranking <- ranking %>% mutate(R2 = Score/20)
ranking %>% kable %>% kable_styling()
# Carga de librerías
library(tidyverse)
library(data.table)
library(lubridate)
library(GGally)
library(gridExtra)
library(knitr)
# Librerías para el modelado
library(caret)
library(ranger)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime,
`Global Radiation [W/m2]`,
`Ambient Temperature [ÂºC]`,
`Ultraviolet [W/m2]`,
`Wind Velocity [m/s]`,
`Wind Direction [Âº]`)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
data <- data %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`)
set.seed <- 42
sample_data <- sample_n(data, 10000)
ggplot(data = sample_data, aes(x = global_radiation,  y = power)) +
geom_point()
data <- data %>% select(-Datetime)
set.seed(42)
trainIndex <- createDataPartition(data$power, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-power)
y_validation_data <- validation_data %>% select(power)
View(X_validation_data)
View(y_validation_data)
View(train_data)
rf_mod <- ranger(power ~ .,
data = train_data,
num.trees = 100,
splitrule = "variance",
min.node.size = 5,
seed = 42)
prediction <- predict(rf_mod, X_validation_data)
y_validation_data <- c(y_validation_data$power)
prediction <- c(prediction$predictions)
MAE <- MAE(y_validation_data, prediction)
MAE
r_squared <- R2(prediction,y_validation_data)
r_squared
0.8684656 * 20
18.831 / 20
19.657 / 20
data <- data %>% select(-Datetime)
data <- data %>% select(-Datetime)
# Carga de librerías
library(tidyverse)
library(data.table)
library(lubridate)
library(GGally)
library(gridExtra)
library(knitr)
# Librerías para el modelado
library(caret)
library(ranger)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime,
`Global Radiation [W/m2]`,
`Ambient Temperature [ÂºC]`,
`Ultraviolet [W/m2]`,
`Wind Velocity [m/s]`,
`Wind Direction [Âº]`)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
data <- data %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`)
set.seed <- 42
sample_data <- sample_n(data, 10000)
ggplot(data = sample_data, aes(x = global_radiation,  y = power)) +
geom_point()
data <- data %>% select(-Datetime)
set.seed(42)
trainIndex <- createDataPartition(data$power, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-power)
y_validation_data <- validation_data %>% select(power)
rf_mod <- ranger(power ~ .,
data = train_data,
num.trees = 1000,
splitrule = "variance",
min.node.size = 5,
seed = 42)
# Carga de librerías
library(tidyverse)
library(data.table)
library(lubridate)
library(GGally)
library(gridExtra)
library(knitr)
# Librerías para el modelado
library(caret)
library(ranger)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime,
`Global Radiation [W/m2]`,
`Ambient Temperature [ÂºC]`,
`Ultraviolet [W/m2]`,
`Wind Velocity [m/s]`,
`Wind Direction [Âº]`)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
data <- data %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`)
set.seed <- 42
sample_data <- sample_n(data, 10000)
ggplot(data = sample_data, aes(x = global_radiation,  y = power)) +
geom_point()
data <- data %>% select(-Datetime)
set.seed(42)
trainIndex <- createDataPartition(data$power, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-power)
y_validation_data <- validation_data %>% select(power)
rf_mod <- ranger(power ~ .,
data = train_data,
num.trees = 10,
splitrule = "variance",
min.node.size = 1,
seed = 42)
prediction <- predict(rf_mod, X_validation_data)
y_validation_data <- c(y_validation_data$power)
prediction <- c(prediction$predictions)
MAE <- MAE(y_validation_data, prediction)
MAE
r_squared <- R2(prediction,y_validation_data)
r_squared
# Carga de librerías
library(tidyverse)
library(data.table)
library(lubridate)
library(GGally)
library(gridExtra)
library(knitr)
# Librerías para el modelado
library(caret)
library(ranger)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime,
`Global Radiation [W/m2]`,
`Ambient Temperature [ÂºC]`,
`Ultraviolet [W/m2]`,
`Wind Velocity [m/s]`,
`Wind Direction [Âº]`)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
data <- data %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`)
set.seed <- 42
sample_data <- sample_n(data, 10000)
ggplot(data = sample_data, aes(x = global_radiation,  y = power)) +
geom_point()
data <- data %>% select(-Datetime)
set.seed(42)
trainIndex <- createDataPartition(data$power, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-power)
y_validation_data <- validation_data %>% select(power)
rf_mod <- ranger(power ~ .,
data = train_data,
num.trees = 100,
splitrule = "variance",
min.node.size = 5,
seed = 42)
prediction <- predict(rf_mod, X_validation_data)
y_validation_data <- c(y_validation_data$power)
prediction <- c(prediction$predictions)
MAE <- MAE(y_validation_data, prediction)
MAE
r_squared <- R2(prediction,y_validation_data)
r_squared
0.8684656 * 20
18.831 / 20
# Carga de librerías
library(tidyverse)
library(data.table)
library(lubridate)
library(GGally)
library(gridExtra)
library(knitr)
# Librerías para el modelado
library(caret)
library(ranger)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime,
`Global Radiation [W/m2]`,
`Ambient Temperature [ÂºC]`,
`Ultraviolet [W/m2]`,
`Wind Velocity [m/s]`,
`Wind Direction [Âº]`)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
data <- data %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`)
set.seed <- 42
sample_data <- sample_n(data, 10000)
ggplot(data = sample_data, aes(x = global_radiation,  y = power)) +
geom_point()
View(validation_data)
View(trainIndex)
View(meteo_data_14_17)
# Carga de librerías
library(tidyverse)
library(data.table)
library(lubridate)
library(GGally)
library(gridExtra)
library(knitr)
# Librerías para el modelado
library(caret)
library(ranger)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
summary(meteo_data_14_17)
summary(meteo_data_18)
# Carga de librerías
library(tidyverse)
library(data.table)
library(lubridate)
library(GGally)
library(gridExtra)
library(knitr)
# Librerías para el modelado
library(caret)
library(ranger)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
summary(meteo_data_14_17)
summary(meteo_data_18)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime,
`Global Radiation [W/m2]`,
`Ambient Temperature [ÂºC]`,
`Ultraviolet [W/m2]`,
`Wind Velocity [m/s]`,
`Wind Direction [Âº]`)
summary(meteo_data_14_17_global_rad)
summary(production_data_optimal_b)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
summary(data)
# Carga de librerías
library(tidyverse)
library(data.table)
library(lubridate)
library(GGally)
library(gridExtra)
library(knitr)
# Librerías para el modelado
library(caret)
library(ranger)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
summary(meteo_data_14_17)
summary(meteo_data_18)
