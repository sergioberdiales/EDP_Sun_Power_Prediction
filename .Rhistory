library(caret)
library(ranger)
meteo_2014 <- read_delim(file = "data/sunlab-faro-meteo-2014.csv", delim = ";")
meteo_files <- list.files(path = data, pattern = "sunlab-faro-meteo")
meteo_files <- list.files(path = "./data", pattern = "sunlab-faro-meteo")
meteo_data <- meteo_files %>% map_df(~fread(.))
library(data.table)
meteo_data <- meteo_files %>% map_df(~fread(.))
meteo_data <- meteo_files %>% map_df(~fread(., path= ="./data"))
"
View(meteo_2014)
meteo_data <- meteo_files %>% map_df(~fread(., path ="./data"))
meteo_2014 <- read_delim(file = "data/sunlab-faro-meteo-2014.csv", delim = ";")
meteo_2014 <- read_delim(file = "data/sunlab-faro-meteo-2014.csv", delim = ";")
meteo_2015 <- read_delim(file = "data/sunlab-faro-meteo-2015.csv", delim = ";")
meteo_files <- list.files(path = "./data", pattern = "sunlab-faro-meteo")
meteo_data <- meteo_files %>% map_df(~fread(., path ="./data"))
meteo_data <- meteo_files %>% map_df(~fread(., file.path ="./data"))
meteo_files <- list.files(path = "./data", pattern = "sunlab-faro-meteo")
meteo_data <- meteo_files %>% map_df(~fread(.))
meteo_files <- list.files(path = "/data", pattern = "sunlab-faro-meteo")
meteo_data <- meteo_files %>% map_df(~fread(.))
#meteo_2014 <- read_delim(file = "data/sunlab-faro-meteo-2014.csv", delim = ";")
#meteo_2015 <- read_delim(file = "data/sunlab-faro-meteo-2015.csv", delim = ";")
#meteo_2016 <- read_delim(file = "data/sunlab-faro-meteo-2016.csv", delim = ";")
#meteo_2017 <- read_delim(file = "data/sunlab-faro-meteo-2017.csv", delim = ";")
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
meteo_data <- meteo_files %>% map_df(~fread(.))
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
meteo_data <- meteo_files %>% map_df(~fread(., path.expand("data")))
data_path <- path.expand("~/data")
meteo_files <- list.files(path = data_path, pattern = "sunlab-faro-meteo")
data_path <- path.expand("data")
meteo_files <- list.files(path = data_path, pattern = "sunlab-faro-meteo")
meteo_data <- meteo_files %>% map_df(~fread(.))
data_path <- path.expand("G:/Mi unidad/0_Competitions/EDP_Sun_Power_Prediction/data")
meteo_files <- list.files(path = data_path, pattern = "sunlab-faro-meteo")
meteo_data <- meteo_files %>% map_df(~fread(.))
meteo_data <- lapply(meteo_files, fread)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
meteo_data <- meteo_files %>% map_df(~read_csv(.))
meteo_2014 <- fread(file = "data/sunlab-faro-meteo-2014.csv")
meteo_files
meto_files + "data/"
meteo_files + "data/"
meteo_files <- c("data/sunlab-faro-meteo-2014.csv", "data/sunlab-faro-meteo-2015.csv",
"data/sunlab-faro-meteo-2016.csv", "data/sunlab-faro-meteo-2017.csv",
"data/sunlab-faro-meteo-2018.csv")
meteo_data <- meteo_files %>% map_df(~read_csv(.))
View(meteo_data)
meteo_data <- meteo_files %>% map_df(~fread(.))
View(meteo_data)
data_ch <- rep("/data")
data_ch <- rep("/data", 5)
prueba <- sum(meteo_files + data_ch)
prueba <- meteo_files + data_ch
glimpse(meteo_files)
glimpse(data_ch)
prueba <- unlist(meteo_files) + unlist(data_ch)
prueba <- paste(meteo_files, data_ch)
prueba
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", 5)
meteo_files <- paste(data_chr,meteofiles)
meteo_files <- paste(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.))
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", 5)
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.))
View(meteo_data)
rm(-meteo_data)
rm(meteo_2014)
rm(meteo_2015)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
meteo_files
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.))
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.))
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.))
View(meteo_data)
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) > 2017)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.))
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.))
glimpse(meteo_data)
class(meteo_data)
class(meteo_data_14_17)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.))
View(meteo_data_18)
View(meteo_data_18)
summary(meteo_data_18)
24*7*60
summary(meteo_data_14_17)
glimpse(production_data)
production_data_optimal_b <- production_data %>% select(`B_Optimal - Power DC [W]`)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(`B_Optimal - Power DC [W]`)
View(production_data_optimal_b)
glimpse(meteo_data_14_17)
View(production_data)
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime, `Global Radiation [W/m2]`)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")
summary(data)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime, `Global Radiation [W/m2]`)
%>% na.omit()
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime, `Global Radiation [W/m2]`)                                                   %>% na.omit()
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime, `Global Radiation [W/m2]`)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
summary(data)
ggplot(data = data, aes(x = `Global Radiation [W/m2]`,  y = `B_Optimal - Power DC [W]`)) +
geom_point()
sample_data <- sample(data, prob = 0.05)
sample_data <- sample(data, 1:10000)
ggplot(data = sample_data, aes(x = `Global Radiation [W/m2]`,  y = `B_Optimal - Power DC [W]`)) +
geom_point()
View(sample_data)
sample_data <- sample(data, 10000)
set.seed <- 42
sample_data <- sample_n(data, 10000)
ggplot(data = sample_data, aes(x = `Global Radiation [W/m2]`,  y = `B_Optimal - Power DC [W]`)) +
geom_point()
set.seed(42)
trainIndex <- createDataPartition(data$`B_Optimal - Power DC [W]`, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-`B_Optimal - Power DC [W]`)
y_validation_data <- validation_data %>% select(`B_Optimal - Power DC [W]`)
View(train_data)
set.seed(42)
data <- data %>% select(-Datetime)
trainIndex <- createDataPartition(data$`B_Optimal - Power DC [W]`, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-`B_Optimal - Power DC [W]`)
y_validation_data <- validation_data %>% select(`B_Optimal - Power DC [W]`)
set.seed(42)
data <- data %>% select(-Datetime)
View(data)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
View(data)
set.seed(42)
data <- data %>% select(-Datetime)
trainIndex <- createDataPartition(data$`B_Optimal - Power DC [W]`, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-`B_Optimal - Power DC [W]`)
y_validation_data <- validation_data %>% select(`B_Optimal - Power DC [W]`)
# We create a base model with all the variables
# Random Forest Model
#tgrid <- expand.grid(
# .mtry = 2:7,
#.splitrule = "variance",
#.min.node.size = c(5, 10, 20)
#)
#model_caret <- train(SalePrice ~ ., data = train_data,
#                     method = "ranger",
#                     trControl = trainControl(method="cv", number = 5, verboseIter = T),
#                     tuneGrid = tgrid,
#                     num.trees = 1000,
#                     importance = "permutation")
#The final values used for the model were mtry = 7, splitrule = variance and min.node.size = 5.
rf_mod <- ranger(`B_Optimal - Power DC [W]` ~ .,
data = train_data,
num.trees = 10,
splitrule = "variance",
mtry = 7,
min.node.size = 1,
seed = 42)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
data <- data %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`)
set.seed <- 42
sample_data <- sample_n(data, 10000)
ggplot(data = sample_data, aes(x = global_radiation,  y = power)) +
geom_point()
set.seed(42)
data <- data %>% select(-Datetime)
trainIndex <- createDataPartition(data$power, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-power)
y_validation_data <- validation_data %>% select(power)
# We create a base model with all the variables
# Random Forest Model
#tgrid <- expand.grid(
# .mtry = 2:7,
#.splitrule = "variance",
#.min.node.size = c(5, 10, 20)
#)
#model_caret <- train(SalePrice ~ ., data = train_data,
#                     method = "ranger",
#                     trControl = trainControl(method="cv", number = 5, verboseIter = T),
#                     tuneGrid = tgrid,
#                     num.trees = 1000,
#                     importance = "permutation")
#The final values used for the model were mtry = 7, splitrule = variance and min.node.size = 5.
rf_mod <- ranger(power ~ .,
data = train_data,
num.trees = 10,
splitrule = "variance",
mtry = 7,
min.node.size = 1,
seed = 42)
rf_mod <- ranger(power ~ .,
data = train_data,
num.trees = 10,
splitrule = "variance",
min.node.size = 1,
seed = 42)
prediction <- predict(rf_mod, X_validation_data)
y_validation_data <- c(y_validation_data$power)
prediction <- c(prediction$predictions)
MAE <- MAE(y_validation_data, prediction)
MAE
r-squared <- R2(prediction,y_validation_data)
r_squared <- R2(prediction,y_validation_data)
r_squared
saveRDS(rf_mod, "base_model_rf.rds")
MAE
summary(meteo_data_18)
glimpse(meteo_data_14_17)
summary(meteo_data_14_17)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime,
`Global Radiation [W/m2]`,
`Ambient Temperature [ÂºC]`,
`Ultraviolet [W/m2]`,
`Wind Velocity [m/s]`,
`Wind Direction [Âº]`)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime,
`Global Radiation [W/m2]`,
`Ambient Temperature [ÂºC]`,
`Ultraviolet [W/m2]`,
`Wind Velocity [m/s]`,
`Wind Direction [Âº]`)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
data <- data %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`)
set.seed(42)
data <- data %>% select(-Datetime)
trainIndex <- createDataPartition(data$power, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-power)
y_validation_data <- validation_data %>% select(power)
# We create a base model with all the variables
# Random Forest Model
#tgrid <- expand.grid(
# .mtry = 2:7,
#.splitrule = "variance",
#.min.node.size = c(5, 10, 20)
#)
#model_caret <- train(SalePrice ~ ., data = train_data,
#                     method = "ranger",
#                     trControl = trainControl(method="cv", number = 5, verboseIter = T),
#                     tuneGrid = tgrid,
#                     num.trees = 1000,
#                     importance = "permutation")
#The final values used for the model were mtry = 7, splitrule = variance and min.node.size = 5.
rf_mod <- ranger(power ~ .,
data = train_data,
num.trees = 10,
splitrule = "variance",
min.node.size = 1,
seed = 42)
View(data)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
data <- data %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`)
set.seed(42)
data <- data %>% select(-Datetime)
trainIndex <- createDataPartition(data$power, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-power)
y_validation_data <- validation_data %>% select(power)
# We create a base model with all the variables
# Random Forest Model
#tgrid <- expand.grid(
# .mtry = 2:7,
#.splitrule = "variance",
#.min.node.size = c(5, 10, 20)
#)
#model_caret <- train(SalePrice ~ ., data = train_data,
#                     method = "ranger",
#                     trControl = trainControl(method="cv", number = 5, verboseIter = T),
#                     tuneGrid = tgrid,
#                     num.trees = 1000,
#                     importance = "permutation")
#The final values used for the model were mtry = 7, splitrule = variance and min.node.size = 5.
rf_mod <- ranger(power ~ .,
data = train_data,
num.trees = 10,
splitrule = "variance",
min.node.size = 1,
seed = 42)
prediction <- predict(rf_mod, X_validation_data)
y_validation_data <- c(y_validation_data$power)
prediction <- c(prediction$predictions)
MAE <- MAE(y_validation_data, prediction)
MAE
r_squared <- R2(prediction,y_validation_data)
r_squared
saveRDS(rf_mod, "base_model_rf_1.rds")
install.packages("dtplyr")
# Carga de librerías
library(tidyverse)
library(dplyr)
install.packages("tidyverse")
# Carga de librerías
library(tidyverse)
library(dtplyr)
install.packages("dtplyr", dependencies = TRUE)
# Carga de librerías
library(tidyverse)
library(dtplyr)
# Carga de librerías
library(tidyverse)
library(data.table)
library(lubridate)
library(GGally)
library(gridExtra)
library(knitr)
# Librerías para el modelado
library(caret)
library(ranger)
meteo_files <- list.files(path = "data", pattern = "sunlab-faro-meteo")
data_chr <- rep("data/", length(meteo_files))
meteo_files <- paste0(data_chr,meteo_files)
meteo_data <- meteo_files %>% map_df(~fread(.)) %>% as_tibble()
meteo_data_14_17 <- meteo_data %>% filter(year(Datetime) < 2018) %>% as_tibble()
meteo_data_18 <- meteo_data %>% filter(year(Datetime) == 2018) %>% as_tibble()
production_files <- list.files(path = "data", pattern = "sunlab-faro-pv")
data_chr <- rep("data/", length(production_files))
production_files <- paste0(data_chr,production_files)
production_data <- production_files %>% map_df(~fread(.)) %>% as_tibble()
production_data_optimal_b <- production_data %>% select(Datetime, `B_Optimal - Power DC [W]`)
meteo_data_14_17_global_rad <- meteo_data_14_17 %>% select(Datetime,
`Global Radiation [W/m2]`,
`Ambient Temperature [ÂºC]`,
`Ultraviolet [W/m2]`,
`Wind Velocity [m/s]`,
`Wind Direction [Âº]`)
data <- left_join(production_data_optimal_b, meteo_data_14_17_global_rad, by = "Datetime")  %>% na.omit()
data <- data %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`)
set.seed <- 42
sample_data <- sample_n(data, 10000)
ggplot(data = sample_data, aes(x = global_radiation,  y = power)) +
geom_point()
data <- data %>% select(-Datetime)
set.seed(42)
trainIndex <- createDataPartition(data$power, p = .9,
list = FALSE,
times = 1)
train_data <- data[trainIndex,]
validation_data <- data[-trainIndex,]
X_validation_data <- validation_data %>% select(-power)
y_validation_data <- validation_data %>% select(power)
# We create a base model with all the variables
# Random Forest Model
#tgrid <- expand.grid(
# .mtry = 2:7,
#.splitrule = "variance",
#.min.node.size = c(5, 10, 20)
#)
#model_caret <- train(SalePrice ~ ., data = train_data,
#                     method = "ranger",
#                     trControl = trainControl(method="cv", number = 5, verboseIter = T),
#                     tuneGrid = tgrid,
#                     num.trees = 1000,
#                     importance = "permutation")
rf_mod <- ranger(power ~ .,
data = train_data,
num.trees = 100,
splitrule = "variance",
min.node.size = 5,
seed = 42)
prediction <- predict(rf_mod, X_validation_data)
y_validation_data <- c(y_validation_data$power)
prediction <- c(prediction$predictions)
MAE <- MAE(y_validation_data, prediction)
MAE
r_squared <- R2(prediction,y_validation_data)
r_squared
saveRDS(rf_mod, "base_model_rf_3.rds")
# Generamos el dataset para la predicción
# Generamos el dataset para la predicción
pred_data <- meteo_data_18 %>% rename(global_radiation = `Global Radiation [W/m2]`,
power = `B_Optimal - Power DC [W]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`) %>%
select(power, temp, wind_vel, wind_dir, ultra_vi)
# Generamos el dataset para la predicción
pred_data <- meteo_data_18 %>% rename(global_radiation = `Global Radiation [W/m2]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`) %>%
select(power, temp, wind_vel, wind_dir, ultra_vi)
# Generamos el dataset para la predicción
pred_data <- meteo_data_18 %>% rename(global_radiation = `Global Radiation [W/m2]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`) %>%
select(temp, wind_vel, wind_dir, ultra_vi)
prediction <- predict(rf_mod, pred_data)
# Generamos el dataset para la predicción
pred_data <- meteo_data_18 %>% rename(global_radiation = `Global Radiation [W/m2]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`) %>%
select(global_radiation, temp, wind_vel, wind_dir, ultra_vi)
prediction <- predict(rf_mod, pred_data)
predictions <- prediction$predictions
predictions <- prediction$predictions %>% as.data.frame()
View(predictions)
Datetime <- meteo_data_18 %>% select(Datetime)
predictions <- prediction$predictions %>% as.data.frame() %>% rename(`B_Optimal - Power DC [W]` = power)
predictions <- prediction$predictions %>%
as.data.frame() %>%
rename("B_Optimal - Power DC [W]" = .)
predictions <- prediction$predictions %>%
as.data.frame()
predictions <- predictions %>% rename("B_Optimal - Power DC [W]" = .)
predictions <- prediction$predictions %>%
as.data.frame()
View(predictions)
colnames(predictions) <- "B_Optimal - Power DC [W]"
View(predictions)
Datetime <- meteo_data_18 %>% select(Datetime)
submission_01 <- bind_cols(Datetime, predictions)
View(submission_01)
View(meteo_data_18)
Datetime <- meteo_data_18 %>% select(Datetime) %>% arrange(Datetime)
View(Datetime)
# Generamos el dataset para la predicción
pred_data <- meteo_data_18 %>% rename(global_radiation = `Global Radiation [W/m2]`,
temp = `Ambient Temperature [ÂºC]`,
wind_vel = `Wind Velocity [m/s]`,
wind_dir = `Wind Direction [Âº]`,
ultra_vi = `Ultraviolet [W/m2]`) %>%
arrange(Datetime) %>%
select(global_radiation, temp, wind_vel, wind_dir, ultra_vi)
prediction <- predict(rf_mod, pred_data)
predictions <- prediction$predictions %>%
as.data.frame()
colnames(predictions) <- "B_Optimal - Power DC [W]"
Datetime <- meteo_data_18 %>% select(Datetime) %>% arrange(Datetime)
submission_01 <- bind_cols(Datetime, predictions)
View(submission_01)
write_csv(submission_01, "submission_01.csv")
View(submission_01)
